
CREATE TABLE DEPARTMENT(
    DEPARTMENTCODE NUMBER(3) PRIMARY KEY,
    DEPARTMENTNAME NVARCHAR2(10) NOT NULL,
    DEPARTMENTNUMBER CHAR(13)
);

INSERT INTO DEPARTMENT VALUES(111, '컴퓨터학과', '02-111-2222');
INSERT INTO DEPARTMENT VALUES(222, '요리학과', '02-333-4444');
INSERT INTO DEPARTMENT VALUES(333, '경제학과', '02-555-6666');
INSERT INTO DEPARTMENT VALUES(444, '역사학과', '02-777-8888');

COMMIT;

CREATE TABLE STUDENT(
    STUDENTID NUMBER(6) PRIMARY KEY,
    NAME NVARCHAR2(7),
    AGE NUMBER(3),
    GRADE NUMBER(1),
    DEPARTMENTCODE NUMBER(3) REFERENCES DEPARTMENT(DEPARTMENTCODE)
);

INSERT INTO STUDENT VALUES(202301, '홍길동', 23, 4, 111);
INSERT INTO STUDENT VALUES(202302, '성춘향', 21, 2, 222);
INSERT INTO STUDENT VALUES(202303, '이순신', 23, 1, 333);
INSERT INTO STUDENT VALUES(202304, '이몽룡', 25, 3, 444);
INSERT INTO STUDENT VALUES(202305, '장보고', 20, 1, 111);
INSERT INTO STUDENT VALUES(202306, '임꺽정', 24, 3, 444);
INSERT INTO STUDENT VALUES(202307, '홍길순', 24, 4, 222);

COMMIT;

SELECT * FROM DEPARTMENT;
SELECT * FROM STUDENT;

-- 홍길동 학생의 학과 전화번호 알아보기
SELECT NAME, DEPARTMENTNAME, DEPARTMENTNUMBER
    FROM STUDENT, DEPARTMENT
        WHERE STUDENT.DEPARTMENTCODE = DEPARTMENT.DEPARTMENTCODE
            AND NAME = '홍길동';

-- ORDER BY :  정렬
-- ASC : 오름차순
-- DESC : 내림차순

SELECT * FROM STUDENT;

SELECT * FROM STUDENT ORDER BY GRADE ASC; -- 학년을 기준으로 오름차순으로 정렬

SELECT * FROM STUDENT ORDER BY GRADE DESC; -- 학년을 기준으로 내림차순으로 정렬

SELECT * FROM STUDENT ORDER BY GRADE ASC, AGE DESC;
-- 학년을 오름차순으로 정렬하고 학년이 같으면 나이를 내림차순으로 정렬


-- 산술연산자
SELECT NAME, AGE + 1 FROM STUDENT;
SELECT NAME, AGE - 1 FROM STUDENT;
SELECT NAME, AGE * 2 FROM STUDENT;
SELECT NAME, AGE / 2 FROM STUDENT;

-- 비교연산자
SELECT * FROM STUDENT WHERE AGE = 23; -- 같다
SELECT * FROM STUDENT WHERE AGE != 23; -- 같지 않다
SELECT * FROM STUDENT WHERE AGE > 23; -- 크다
SELECT * FROM STUDENT WHERE AGE < 23; -- 작다
SELECT * FROM STUDENT WHERE AGE >= 23; -- 크거나 같다
SELECT * FROM STUDENT WHERE AGE <= 23; -- 작거나 같다

-- 논리연산자
-- AND : 두가지 조건을 모두 만족해야 한다.
SELECT * FROM STUDENT WHERE AGE = 23 AND GRADE = 1; 

-- OR : 두가지 조건 중 하나만 만족해도 가능하다.
SELECT * FROM STUDENT WHERE AGE = 23 OR GRADE = 1; 

-- NOT : 조건을 만족하지 않아야 한다.
SELECT * FROM STUDENT WHERE  NOT AGE = 23;

-- 기타 연산자
-- BETWEEN ~ AND : 특정 범위에 포함되는지 여부 :  <= AND <= 
SELECT * FROM STUDENT WHERE GRADE BETWEEN 2 AND 3;

-- IN : 비교값 목록에 포함되는지 여부 (OR이 여러개일 경우에 대체하는 연산자)
SELECT * FROM STUDENT WHERE GRADE IN (2,3,4);

-- NOT IN : 비교값 목록에 비포함되는지 여부
SELECT * FROM STUDENT WHERE GRADE NOT IN (2,3,4);

